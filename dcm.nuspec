<?xml version="1.0" encoding="utf-8"?>

<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>dcm</id>
    <version>1.29.0</version>
    <title>dcm</title>
    <authors>Dmitry Zhifarsky</authors>
    <owners>Dmitry Zhifarsky</owners>
    <projectUrl>https://dcm.dev/</projectUrl>
    <iconUrl>https://raw.githubusercontent.com/CQLabs/choco-dcm/ed4646f4dda3bbea4b9f1b19c4d480377aa7a009/assets/logo-256.png</iconUrl>
    <licenseUrl>https://dcm.dev/eula/</licenseUrl>
    <packageSourceUrl>https://github.com/CQLabs/choco-dcm</packageSourceUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <docsUrl>https://dcm.dev/docs/</docsUrl>
    <tags>dcm Dart Flutter StaticAnalysis CodeMetrics</tags>
    <summary>DCM is a tool that helps improve the quality and consistency of Dart code by identifying and reporting problems, such as bugs and code that doesn't follow best practices. It also collects analytical data on the code through calculating code metrics and can be configured to set thresholds for these metrics.
    
      This executable requires a license to work. You can also request a trial version.
    </summary>
    <description>
DCM is a toolkit that helps you identify and fix problems in your Dart and Flutter code. These problems can range from potential runtime bugs and violations of best practices to styling issues. DCM includes over 70 built-in rules to validate your code against various expectations, and you can customize these rules to fit your specific needs.

## Rules
Rules are central to how DCM works. They are used to check whether your code meets certain expectations, and to specify what should be done if it doesn't. Rules can also be configured with additional options specific to that rule.
      
For more information, see the [Rules](https://dcm.dev/docs/rules/) documentation.
      
## Metrics
Metrics are another important aspect of DCM. They are used to measure the complexity of your code and identify areas that may be difficult to maintain or test. This can be particularly useful for larger projects, where it can be challenging to keep track of all the different contributions from various developers. Metrics can also provide instant feedback on pull requests for smaller projects, helping to ensure that code stays easy to maintain.
      
All metrics are configurable.
      
For more information, see the [Metrics](https://dcm.dev/docs/metrics/) documentation.
      
## Commands
In addition to providing rules and metrics, DCM also includes commands to help with codebase maintenance, such as identifying unused code, unused files, and unused localization.
      
For more information, see the [CLI](https://dcm.dev/docs/cli/) documentation.
      
## Configuration
DCM is designed to be flexible and configurable to fit your specific needs. You can choose to enable only metrics calculation, only rules, or both.
      
For more information, see the [Configuration](https://dcm.dev/docs/configuration/) documentation.
    </description>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
